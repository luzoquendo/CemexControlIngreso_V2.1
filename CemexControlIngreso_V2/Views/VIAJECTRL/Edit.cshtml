@model CemexControlIngreso_V2.Models.VIAJECTRL

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>CONTROL VIAJE </h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdViaje)

    <div class="form-group">
        @Html.LabelFor(model => model.Fecha, "Fecha Viaje", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @*@Html.TextBox("Fecha", "", new { @class = "form-control", @Value = ViewBag.Fecha })*@
            @Html.TextBox("Fecha", "", new { @class = "form-control form_datetime", @readonly = "readonly", @Value = ViewBag.Fecha })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("INFORMACION VEHICULO", null, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.Label("INFORMACION CONDUCTOR", null, htmlAttributes: new { @class = "control-label col-md-3" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idPlaca, "Placa", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("idPlaca", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idPlaca, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.IdConductor, "Conductor", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownListFor(x => x.IdConductor, (SelectList)ViewBag.Conductores, htmlAttributes: new { @class = "form-control", @onchange = "callChangefunc(IdConductor.selectedOptions[0].label)" })
            @Html.ValidationMessageFor(model => model.IdConductor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idTrailer, "Trailer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("idTrailer", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idTrailer, "", new { @class = "text-danger" })
        </div>

        @Html.Label("Nombre", null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.TextBox("NombreCond", "", new { @class = "form-control", @Value = ViewBag.NombreCond })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Número CheckList", null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Checklist)
            @*@Html.TextBox("Checklist", "", new { @class = "form-control" })*@
        </div>
        @Html.Label("Instructor", null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.TextBox("Instructor", "", new { @class = "form-control", @Value = ViewBag.Instructor })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        @Html.Label("Celular", null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.TextBox("Celular", "", new { @class = "form-control", @Value = ViewBag.Celular })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        @Html.Label("Prueba Alcoholemia", null, htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-xs-3">
            @Html.EditorFor(model => model.Alcohotest)
            @*@Html.TextBox("Alcohotest", "", new { @class = "form-control" })*@
        </div>
    </div>
    <div class="form-group">
        @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.Label("VIAJE ASIGNADO", null, htmlAttributes: new { @class = "control-label col-md-3" })
        @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-3" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NumeroViaje, "Número Viaje", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.NumeroViaje)
            @Html.ValidationMessageFor(model => model.NumeroViaje, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idTrailer, "Producto", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("idProducto", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdProducto, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.IdCorredor, "Corredor", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("IdCorredor", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdCorredor, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Fecha Control", null, htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-xs-3">
            @Html.TextBox("FechaCtrl", "", new { @class = "form-control form_datetime", @readonly = "readonly", @Value = ViewBag.FechaCtrl })
        </div>

        @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownListFor(m => m.Estado, new SelectList(new[] { new { Value = "true", Text = "En Curso" }, new { Value = "false", Text = "Fin Viaje" }, }, "Value", "Text"), new { @onchange = @"callChangefunc1(ViewBag.NumeroViaje)" })
            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" onclick="Edit(IdViaje, Viewbag.IdConductor, IdCorredor, idProducto, Estado, IdPlaca, IdTrailer, Alcohotest, NumeroViaje, Checklist)" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
        window.onload = function () {
            window.alert("@ViewBag.Message");
        };
        </script>
    }


    <script type="text/JavaScript">


        @*$(document).ready(function () {
                //$(".form_datetime").datepicker();
                $.ajax({
                type: 'POST',
                    url: '@Url.Action("ConsultaId", "VIAJE")',
                    data: { IdConductor: Viewbag.IdConductor },
                datatype: "html",
                    success: function (data) {
                        alert(val);
                    debugger;
                    $('#NombreCond').val(data.split(",")[0].split(":")[1].replace(/"/g,""));
                    $('#Celular').val(data.split(",")[1].split(":")[1].replace(/"/g, ""));
                }
                });

        });*@

        function Edit() {
            $.ajax({
                url: '@Url.Action("Edit","VIAJECTRL")',
                dataType: "json",
                type: "POST",
                cache: false,
                data: { IdViaje: IdViaje, IdConductor: Viewbag.IdConductor, IdCorredor: IdCorredor, idProducto: idProducto, Estado: Estado, IdPlaca: IdPlaca, IdTrailer: IdTrailer, Alcohotest: Alcohotest, NumeroViaje: NumeroViaje },
                success: function (data) {
                    if (data.success) {
                        alert(data.message);
                    }
                },
                error: function (xhr) {
                    alert(xhr.responseText);
                }
            });
        }

    </script>

    <script>
        @*function callChangefunc(val) {

            $.ajax({
                type: 'POST',
                url: '@Url.Action("Consulta", "VIAJE")',
                data: { id: val },
                datatype: "html",
                success: function (data) {
                    debugger;
                    $('#NombreCond').val(data.split(",")[0].split(":")[1].replace(/"/g,""));
                    $('#Celular').val(data.split(",")[1].split(":")[1].replace(/"/g, ""));
                }
            });
        }*@
        function callChangefunc(val) {
            alert("entro funcion");
                    var idinst = "";
                    var promise = $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Consulta", "VIAJE")',
                        data: { id: val },
                        datatype: "html",
                        success: function (data) {
                            debugger;
                            $('#NombreCond').val(data.split(",")[0].split(":")[1].replace(/"/g,""));
                            $('#Celular').val(data.split(",")[1].split(":")[1].replace(/"/g, ""));
                            idinst = data.split(",")[3].split(":")[1].replace(/}/g, "").replace(/]/g, "");
                        }
                    });
                    promise.then(function () {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("TraerInstructor", "VIAJE")',
                            data: { id: idinst },
                            datatype: "html",
                            success: function (data) {
                                debugger;
                                $('#Instructor').val(data.replace("[", "").replace("]", "").replace(/"/g, "").replace(/\r\n/g, ""));
                            }
                        });
                    });
                }
    </script>

    <script>
        function callChangefunc1(val) {

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ActualizarViaje", "VIAJE")',
                data: { id: val },
                datatype: "html",
                success: function (data) {
                    debugger;
                    //$('#NombreCond').val(data.split(",")[0].split(":")[1].replace(/"/g,""));
                    //$('#Celular').val(data.split(",")[1].split(":")[1].replace(/"/g, ""));
                }
            });
    }
    </script>
}
