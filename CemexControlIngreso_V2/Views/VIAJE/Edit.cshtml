@model CemexControlIngreso_V2.Models.VIAJE
@{
    var val = Model.IdConductor;
}


@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>VIAJE</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdViaje)

        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, "Fecha Viaje", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @*@Html.TextBox("Fecha", "", new { @class = "form-control", @Value = ViewBag.Fecha })*@
                @Html.TextBox("Fecha", "", new { @class = "form-control form_datetime", @Value = DateTime.Now, @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("INFORMACION VEHICULO", null, htmlAttributes: new { @class = "control-label col-md-3" })
            @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-3" })
            @Html.Label("INFORMACION CONDUCTOR", null, htmlAttributes: new { @class = "control-label col-md-3" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idPlaca, "Placa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("idPlaca", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idPlaca, "", new { @class = "text-danger" })
            </div>

            @*@Html.LabelFor(model => model.IdConductor, "Conductor", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownList("IdConductor", null, htmlAttributes: new { @class = "form-control", @onchange = "callChangefunc(IdConductor.selectedOptions[0].label)" })
                    @Html.ValidationMessageFor(model => model.IdConductor, "", new { @class = "text-danger" })
                </div>*@
            @Html.LabelFor(model => model.IdConductor, "Conductor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(x => x.IdConductor, (SelectList)ViewBag.Conductores, htmlAttributes: new { @class = "form-control", @onchange = "callChangefunc(IdConductor.selectedOptions[0].label)" })
                @Html.ValidationMessageFor(model => model.IdConductor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.idTrailer, "Trailer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("idTrailer", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idTrailer, "", new { @class = "text-danger" })
            </div>

            @Html.Label("Nombre", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBox("NombreCond", "", new { @class = "form-control", @Value = ViewBag.NombreCond })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Número CheckList", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Checklist)
                @Html.ValidationMessageFor(model => model.Alcohotest, "", new { @class = "text-danger" })
                @*@Html.TextBox("Checklist", "", new { @class = "form-control" })*@
            </div>
            @Html.Label("Instructor", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBox("NombreInst", "", new { @class = "form-control", @Value = ViewBag.NombreInst })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            @Html.Label("Celular", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBox("Celular", "", new { @class = "form-control", @Value = ViewBag.Celular })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            @Html.LabelFor(model => model.Alcohotest, "Prueba Alcoholemia", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Alcohotest)
                @Html.ValidationMessageFor(model => model.Alcohotest, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-3" })
            @Html.Label("VIAJE ASIGNADO", null, htmlAttributes: new { @class = "control-label col-md-3" })
            @Html.Label(" ", null, htmlAttributes: new { @class = "control-label col-md-3" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NumeroViaje, "Número Viaje", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.NumeroViaje)
                @Html.ValidationMessageFor(model => model.NumeroViaje, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.Estado, new SelectList(new[] { new { Value = "true", Text = "Activo" }, new { Value = "false", Text = "Inactivo" }, }, "Value", "Text"))
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.idTrailer, "Producto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("idProducto", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdProducto, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.IdCorredor, "Corredor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("IdCorredor", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCorredor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/JavaScript">

        @*$(document).ready(function () {
            debugger;
            var idCond = document.getElementById("IdConductor").selectedOptions[0].value
            var idinst = "";
            var promise = $.ajax({
                type: 'POST',
                url: '@Url.Action("Consulta", "VIAJE")',
                data: { id: idCond },
                datatype: "html",
                success: function (data) {
                    debugger;
                    $('#NombreCond').val(data.split(",")[0].split(":")[1].replace(/"/g, ""));
                    $('#Celular').val(data.split(",")[1].split(":")[1].replace(/"/g, ""));
                    idinst = data.split(",")[3].split(":")[1].replace(/}/g, "").replace(/]/g, "");
                    alert(idinst);
                }
            });
            promise.then(function () {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("TraerInstructor", "VIAJE")',
                    data: { id: idinst },
                    datatype: "html",
                    success: function (data) {
                        debugger;
                        $('#NombreInst').val(data.replace("[", "").replace("]", "").replace(/"/g, "").replace(/\r\n/g, ""));
                    }
                });
            });
        });*@
    </script>

    <script>
            function callChangefunc(val) {
                     debugger;
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ConsultaId", "VIAJE")',
                    data: { IdConductor: val },
                    datatype: "html",
                    success: function (data) {
                        debugger;
                        $('#NombreCond').val(data.split(",")[0].split(":")[1].replace(/"/g,""));
                        $('#Celular').val(data.split(",")[1].split(":")[1].replace(/"/g, ""));
                    }
                });
        }
        </script>

    @Scripts.Render("~/bundles/jqueryval")

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
        window.onload = function () {
            window.alert("@ViewBag.Message");
        };
        </script>
    }
}
